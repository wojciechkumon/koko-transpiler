/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.newkoko.c.node;

import org.newkoko.c.analysis.*;

@SuppressWarnings("nls")
public final class ABinaryRightHandSide extends PRightHandSide
{
    private PBinaryExpression _binaryExpression_;

    public ABinaryRightHandSide()
    {
        // Constructor
    }

    public ABinaryRightHandSide(
        @SuppressWarnings("hiding") PBinaryExpression _binaryExpression_)
    {
        // Constructor
        setBinaryExpression(_binaryExpression_);

    }

    @Override
    public Object clone()
    {
        return new ABinaryRightHandSide(
            cloneNode(this._binaryExpression_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABinaryRightHandSide(this);
    }

    public PBinaryExpression getBinaryExpression()
    {
        return this._binaryExpression_;
    }

    public void setBinaryExpression(PBinaryExpression node)
    {
        if(this._binaryExpression_ != null)
        {
            this._binaryExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._binaryExpression_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._binaryExpression_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._binaryExpression_ == child)
        {
            this._binaryExpression_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._binaryExpression_ == oldChild)
        {
            setBinaryExpression((PBinaryExpression) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
