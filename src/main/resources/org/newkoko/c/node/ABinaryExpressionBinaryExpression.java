/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.newkoko.c.node;

import org.newkoko.c.analysis.*;

@SuppressWarnings("nls")
public final class ABinaryExpressionBinaryExpression extends PBinaryExpression
{
    private PValue _lValue_;
    private PBinaryOp _binaryOp_;
    private PValue _rValue_;

    public ABinaryExpressionBinaryExpression()
    {
        // Constructor
    }

    public ABinaryExpressionBinaryExpression(
        @SuppressWarnings("hiding") PValue _lValue_,
        @SuppressWarnings("hiding") PBinaryOp _binaryOp_,
        @SuppressWarnings("hiding") PValue _rValue_)
    {
        // Constructor
        setLValue(_lValue_);

        setBinaryOp(_binaryOp_);

        setRValue(_rValue_);

    }

    @Override
    public Object clone()
    {
        return new ABinaryExpressionBinaryExpression(
            cloneNode(this._lValue_),
            cloneNode(this._binaryOp_),
            cloneNode(this._rValue_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABinaryExpressionBinaryExpression(this);
    }

    public PValue getLValue()
    {
        return this._lValue_;
    }

    public void setLValue(PValue node)
    {
        if(this._lValue_ != null)
        {
            this._lValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lValue_ = node;
    }

    public PBinaryOp getBinaryOp()
    {
        return this._binaryOp_;
    }

    public void setBinaryOp(PBinaryOp node)
    {
        if(this._binaryOp_ != null)
        {
            this._binaryOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._binaryOp_ = node;
    }

    public PValue getRValue()
    {
        return this._rValue_;
    }

    public void setRValue(PValue node)
    {
        if(this._rValue_ != null)
        {
            this._rValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rValue_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lValue_)
            + toString(this._binaryOp_)
            + toString(this._rValue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lValue_ == child)
        {
            this._lValue_ = null;
            return;
        }

        if(this._binaryOp_ == child)
        {
            this._binaryOp_ = null;
            return;
        }

        if(this._rValue_ == child)
        {
            this._rValue_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lValue_ == oldChild)
        {
            setLValue((PValue) newChild);
            return;
        }

        if(this._binaryOp_ == oldChild)
        {
            setBinaryOp((PBinaryOp) newChild);
            return;
        }

        if(this._rValue_ == oldChild)
        {
            setRValue((PValue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
