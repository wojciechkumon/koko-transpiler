/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.newkoko.c.parser;

import org.newkoko.c.node.*;
import org.newkoko.c.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 0;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 1;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 2;
    }

    @Override
    public void caseTLPar(@SuppressWarnings("unused") TLPar node)
    {
        this.index = 3;
    }

    @Override
    public void caseTRPar(@SuppressWarnings("unused") TRPar node)
    {
        this.index = 4;
    }

    @Override
    public void caseTLBracket(@SuppressWarnings("unused") TLBracket node)
    {
        this.index = 5;
    }

    @Override
    public void caseTRBracket(@SuppressWarnings("unused") TRBracket node)
    {
        this.index = 6;
    }

    @Override
    public void caseTLBrace(@SuppressWarnings("unused") TLBrace node)
    {
        this.index = 7;
    }

    @Override
    public void caseTRBrace(@SuppressWarnings("unused") TRBrace node)
    {
        this.index = 8;
    }

    @Override
    public void caseTStar(@SuppressWarnings("unused") TStar node)
    {
        this.index = 9;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 10;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 11;
    }

    @Override
    public void caseTAmpersand(@SuppressWarnings("unused") TAmpersand node)
    {
        this.index = 12;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 13;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 14;
    }

    @Override
    public void caseTExclMark(@SuppressWarnings("unused") TExclMark node)
    {
        this.index = 15;
    }

    @Override
    public void caseTQuestMark(@SuppressWarnings("unused") TQuestMark node)
    {
        this.index = 16;
    }

    @Override
    public void caseTEq(@SuppressWarnings("unused") TEq node)
    {
        this.index = 17;
    }

    @Override
    public void caseTEqEq(@SuppressWarnings("unused") TEqEq node)
    {
        this.index = 18;
    }

    @Override
    public void caseTNotEq(@SuppressWarnings("unused") TNotEq node)
    {
        this.index = 19;
    }

    @Override
    public void caseTLt(@SuppressWarnings("unused") TLt node)
    {
        this.index = 20;
    }

    @Override
    public void caseTLtEq(@SuppressWarnings("unused") TLtEq node)
    {
        this.index = 21;
    }

    @Override
    public void caseTGt(@SuppressWarnings("unused") TGt node)
    {
        this.index = 22;
    }

    @Override
    public void caseTGtEq(@SuppressWarnings("unused") TGtEq node)
    {
        this.index = 23;
    }

    @Override
    public void caseTAmpersandAmpersand(@SuppressWarnings("unused") TAmpersandAmpersand node)
    {
        this.index = 24;
    }

    @Override
    public void caseTBarBar(@SuppressWarnings("unused") TBarBar node)
    {
        this.index = 25;
    }

    @Override
    public void caseTStarEqual(@SuppressWarnings("unused") TStarEqual node)
    {
        this.index = 26;
    }

    @Override
    public void caseTDivEqual(@SuppressWarnings("unused") TDivEqual node)
    {
        this.index = 27;
    }

    @Override
    public void caseTModEqual(@SuppressWarnings("unused") TModEqual node)
    {
        this.index = 28;
    }

    @Override
    public void caseTPlusEqual(@SuppressWarnings("unused") TPlusEqual node)
    {
        this.index = 29;
    }

    @Override
    public void caseTMinusEqual(@SuppressWarnings("unused") TMinusEqual node)
    {
        this.index = 30;
    }

    @Override
    public void caseTCase(@SuppressWarnings("unused") TCase node)
    {
        this.index = 31;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 32;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 33;
    }

    @Override
    public void caseTSwitch(@SuppressWarnings("unused") TSwitch node)
    {
        this.index = 34;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 35;
    }

    @Override
    public void caseTFor(@SuppressWarnings("unused") TFor node)
    {
        this.index = 36;
    }

    @Override
    public void caseTIn(@SuppressWarnings("unused") TIn node)
    {
        this.index = 37;
    }

    @Override
    public void caseTContinue(@SuppressWarnings("unused") TContinue node)
    {
        this.index = 38;
    }

    @Override
    public void caseTBreak(@SuppressWarnings("unused") TBreak node)
    {
        this.index = 39;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 40;
    }

    @Override
    public void caseTFun(@SuppressWarnings("unused") TFun node)
    {
        this.index = 41;
    }

    @Override
    public void caseTVoid(@SuppressWarnings("unused") TVoid node)
    {
        this.index = 42;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 43;
    }

    @Override
    public void caseTLong(@SuppressWarnings("unused") TLong node)
    {
        this.index = 44;
    }

    @Override
    public void caseTDouble(@SuppressWarnings("unused") TDouble node)
    {
        this.index = 45;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 46;
    }

    @Override
    public void caseTFloatingConstant(@SuppressWarnings("unused") TFloatingConstant node)
    {
        this.index = 47;
    }

    @Override
    public void caseTStringLiteral(@SuppressWarnings("unused") TStringLiteral node)
    {
        this.index = 48;
    }

    @Override
    public void caseTIntegerConstant(@SuppressWarnings("unused") TIntegerConstant node)
    {
        this.index = 49;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 50;
    }
}
